// <auto-generated />
using System;
using ConcurrentDbReadersExample.Tests.DatabaseAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ConcurrentDbReadersExample.Tests.DatabaseAccess.Migrations.Postgres
{
    [DbContext(typeof(NpgsqlAppDbContext))]
    [Migration("20250609091756_SetUpPostgres")]
    partial class SetUpPostgres
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ConcurrentDbReadersExample.Tests.DatabaseAccess.OutboxItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at_utc");

                    b.Property<string>("JsonPayload")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("jsonb")
                        .HasColumnName("json_payload");

                    b.Property<DateTime?>("ProcessedAtUtc")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("processed_at_utc");

                    b.Property<string>("ProcessedBy")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("processed_by");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("type");

                    b.HasKey("Id")
                        .HasName("pk_outbox_items");

                    b.HasIndex("Id", "ProcessedAtUtc")
                        .HasDatabaseName("ix_outbox_items_unprocessed_items")
                        .HasFilter("processed_at_utc IS NULL");

                    b.ToTable("outbox_items", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
